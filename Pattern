//**scatterplot**//
import numpy as np

import matplotlib.pyplot as plt
n=int(input("Enter the array size ="))
x=[]
y=[]

print("INPUT FOR 1ST ARRAY")
for i in range(n):
    a1=float(input("Enter the value : "))
    x.append(a1)

print("INPUT FOR 2ND ARRAY")
for i in range(n):
    a2=float(input("Enter the value: "))
    y.append(a2)

plt.scatter(x, y)
plt.xlabel("Numbers in array")
plt.ylabel("Range")
plt.title("Scatter plot")
plt.show()

//** COVARIENCE **//
import numpy as np
n=int(input("Enter the total number of element : "))
cov_matrix=np.zeros((2,2))
arr=[]
arr1=[]
for i in range(n):
    ele=float(input("Enter the value of 1st array: "))
    arr.append(ele)
i=0
print("For second array")
for j in range(n):
    ele=float(input("Enter the value for 2nd array: "))
    arr1.append(ele)
j=0
sum1=0
sum2=0
sum3=0
arr=np.array(arr)
arr1=np.array(arr1)
x=(np.sum(arr))/n
y=(np.sum(arr1))/n
for i in range(n): #covarience of x,y 
    sum1=sum1+(arr[i]-x)*(arr1[i]-y)
final1=sum1/(n-1)    
for i in range(n): #varience of x
    sum2=sum2+((arr[i]-x)*(arr[i]-x))
final2=sum2/(n-1)
for i in range(n): #varience of y
    sum3=sum3+((arr1[i]-y)*(arr1[i]-y))
final3=sum3/(n-1)
cov_matrix[0][0]=final2
cov_matrix[0][1]=final1
cov_matrix[1][0]=final1
cov_matrix[1][1]=final3
print(cov_matrix)



//** EIGEN VALUE**//
import numpy as np
row=int(input("Enter the row : "))
col=int(input("Enter the column : "))
matrix=[]
print("Enter the matrix in row wise")
for i in range(row) :
    a=[]
    for j in range(col) :
        a.append(int(input("Enter a number : ")))
    matrix.append(a)
matrix = np.array(matrix)
  
print("Printing the Original square array:\n",matrix)
ev, e_vac = np.linalg.eig(matrix)
print("Eigen values of the array:\n",ev)
  
print("Eigen vectors of the array:\n",e_vac)


            OR
            
            
           
import numpy as np
import math
row=int(input("Enter the row : "))
col=int(input("Enter the column : "))
matrix=[]
print("Enter the matrix in row wise")
for i in range(row) :
    a=[]
    for j in range(col) :
        a.append(int(input("Enter a number : ")))
    matrix.append(a)
print("MAT",matrix)
matrix=np.array(matrix)
print("MAT2",matrix)
b=matrix[0][0]*matrix[1][1]
c=(matrix[0][0]*matrix[1][1])-(matrix[1][0]*matrix[0][1])
det=((b**2)-(4*1*c))
if(det==0):
    r1=(-b)/2
    print("The roots are same and real and value is",r1)
elif(det>0):
    r1=((-b)+math.sqrt(det))/2
    r2=((-b)-math.sqrt(det))/2 
    print("The eigenvalues are different but real and value is %d %d ." %(r1,r2))
else :
    print("The eigenvalues are complex .")
